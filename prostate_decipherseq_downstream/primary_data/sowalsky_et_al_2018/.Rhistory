rbinom(10,10,0.5)
?rbinom(10,10,0.5)
?rbinom(2,10,0.5)
rbinom(2,10,0.5)
rbinom(n=1,p=0.5)
rbinom(n=1,p=0.5,siz=1)
rbinom(n=1,p=0.5,siz=10)
rbinom(n=1,p=0.5,siz=2)
rbinom(n=10,p=0.5,siz=2)
rbinom(n=10,p=0.5,size=2)
rbinom(n=10,p=0.5,size=1)
rbinom(n=10,p=0.5,size=1)
rbinom(n=100,p=0.5,size=1)
rbinom(10,1,0.5)
rbinom(10,5,0.5)
rbinom(100,5,0.5)
rbinom(100,10,0.5)
rbinom(100,1,0.5)
rbinom(100,33,0.5)
rbinom(100,33,0.1)
exit()
quit()
R.home()
?rapply
?apply
install.packages("tidyverse")
library("tidyverse")
library("Matrix")
library("ComplexHeatmap")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("ComplexHeatmap")
library("ComplexHeatmap")
heatmap()
library("tidyverse")
library("Matrix")
library("ComplexHeatmap")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("limma")
librayr(RcppArmadillo)
library(RcppArmadillo)
library(hdf5r)
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("dorothea")
library(dorothea)
entire_database()
entire_database
entire_database %>% pull(tf) %>% table()
library("tidyverse")
entire_database %>% pull(tf) %>% table()
entire_database %>% filter(tf == "PBX1")
entire_database %>% filter(tf == "PBX2")
entire_database %>% filter(tf == "HAND2")
entire_database %>% filter(tf == "HAND2") %>% filter(1)
entire_database %>% filter(tf == "HAND2") %>% slice(1)
entire_database %>% filter(tf == "HAND2") %>% slice(1) %>% as.data.frame()
d
sessionInfo()
version()
version
pressure
library(decoupleR)
get_collectri()
net <- get_collectri(organism='human', split_complexes=FALSE)
decoupleR::get_collectri(organism='human', split_complexes=FALSE)
?get_collectri
library(Seurat)
library(decoupleR)
library(tidyverse)
BiocManager::install("saezlab/decoupleR")
library(tidyverse)
library(decoupleR)
get_collectri(organism='human', split_complexes=FALSE)
BiocManager::install("saezlab/decoupleR", force = TRUE)
library(decoupleR)
install.packages("rlang", dependencies = TRUE)
install.packages("rlang", dependencies = TRUE)
BiocManager::install("saezlab/decoupleR", force = TRUE)
BiocManager::install("saezlab/decoupleR", force = TRUE)
library(tidyverse)
library(Seurat)
library(decoupleR)
library(tidyverse)
library(Seurat)
library(decoupleR)
net <- get_collectri(organism='human', split_complexes=FALSE)
library(OmnipathR)
net <- get_collectri(organism='human', split_complexes=FALSE)
require(devtools)
install_github('saezlab/OmnipathR', force=TRUE)
library(OmnipathR)
net <- get_collectri(organism='human', split_complexes=FALSE)
library(decoupleR)
net <- get_collectri(organism='human', split_complexes=FALSE)
require(devtools)
install_github('saezlab/OmnipathR', force=TRUE)
library(decoupleR)
run_viper()
install.packages("digest", dep =T)
install.packages("tzdb", dep =T)
install.packages("tzdb", dep =T)
library(devtools)
install_github('saezlab/OmnipathR', force=TRUE)
library(decoupleR)
net <- get_collectri(organism='human', split_complexes=FALSE)
install.packages("RaceID", dep = T)
library(RaceID)
install.packages("propr", dep = T)
install.packages("~/Downloads/propr_4.2.6.tar.gz", repos = NULL, type="source")
library(RaceID)
install.packages("~/Downloads/propr_4.2.6.tar.gz", repos = NULL, type="source")
library(propr)
detach(propr)
detach("propr")
install.packages("haven", dep = T)
library(tidygraph)
library(tidyverse)
library(haven)
read_sas
d <- read_sas("/Users/irosbarozzi/Documents/MUW/project_transpallas/data/20230811.rnaseqrawcount.sas7bdat")
d
d[1,]
d[1,1:100]
d[1,1:100] %> View
d[1,1:100] %>% View
so <- readRDS("~/Dropbox/Projects/DTPs/TNBC_sc/Howie/Analysis/so_tumour.rds")
library(Seurat)
so <- readRDS("~/Dropbox/Projects/DTPs/TNBC_sc/Howie/Analysis/so_tumour.rds")
so <- readRDS("~/Dropbox/Projects/DTPs/TNBC_sc/Howie/Analysis/so_tumour_MultiK.rds")
so@meta.data[1,]
VlnPlot(so, feature = "Lgals3", group.by = "MultiK_clustersH", split.by = "cell_type")
VlnPlot(so, feature = "Slpi", group.by = "MultiK_clustersH", split.by = "cell_type")
VlnPlot(so, feature = c("Ecgr4"), group.by = "MultiK_clustersH", split.by = "cell_type")
VlnPlot(so, feature = c("Ecrg4"), group.by = "MultiK_clustersH", split.by = "cell_type")
VlnPlot(so, feature = c("Serpine2"), group.by = "MultiK_clustersH", split.by = "cell_type")
VlnPlot(so, feature = c("Lgals3"), group.by = "MultiK_clustersH", split.by = "cell_type")
VlnPlot(so, feature = c("Sox6"), group.by = "MultiK_clustersH", split.by = "cell_type")
VlnPlot(so, feature = c("Cldn4"), group.by = "MultiK_clustersH", split.by = "cell_type")
VlnPlot(so, feature = c("Krt8"), group.by = "MultiK_clustersH", split.by = "cell_type")
VlnPlot(so, feature = c("Col3a1"), group.by = "MultiK_clustersH", split.by = "cell_type")
VlnPlot(so, feature = c("Col1a1"), group.by = "MultiK_clustersH", split.by = "cell_type")
library(devtools)
devtools::install_github("xinhe-lab/GSFA", build_vignettes = TRUE)
libvrary(GSFA)
library(GSFA)
install.packages("tidymodels")
install.packages("tidymodels")
install.packages("tidymodels")
library(tidymodels)
library(tidyverse)
library(tidymodels)
library(decoupleR)
library(ComplexHeatmap)
library(circlize)
library(tidyverse)
library(tidymodels)
library(decoupleR)
library(ComplexHeatmap)
library(circlize)
outFolder <- "analyses_20220131.results/"
#~~~~~~~~~~~~~~~~
#Data Preparation
#################
dset_ens <- readRDS("results/sleuth.results.expr_matrix.log2.rds")
#collapse to symbols
gene_map <- read_tsv("TranscriptToGene.txt")
colnames(gene_map) <- c("ensembl_gene", "ensembl_tx", "symbol", "ensembl_tx_v")
dset_ens <- dset_ens %>%
rownames_to_column() %>%
as_tibble() %>%
dplyr::rename(ensembl_tx_v = rowname)
dset_ens_long <- dset_ens %>%
pivot_longer(!ensembl_tx_v, names_to = "sample", values_to = "expr") %>%
right_join(gene_map, by = "ensembl_tx_v") %>%
dplyr::filter(!is.na(sample))
dset_ens_long_avg <- dset_ens_long %>%
group_by(sample, symbol) %>%
summarise(expr_avg = mean(expr))
dset_tib <- dset_ens_long_avg %>% pivot_wider(names_from = sample, values_from = expr_avg)
dset <- dset_tib %>%
select(-c("symbol")) %>%
as.data.frame()
rownames(dset) <- dset_tib %>% pull(symbol)
#add metadata for heat map annotation
meta_clinic <- read_tsv("metadata_clinical.txt")
meta_sample <- read_tsv("metadata_samples.txt")
meta_sample <- meta_sample %>%
rowwise %>%
mutate(id = paste(patient_id, "_", treatment, sep = "")) %>%
ungroup()
meta_full <- meta_sample %>%
left_join(meta_clinic, by = "patient_id") %>%
dplyr::rename(response = `Responder/Not_responder/Stable`)
meta_full$response[is.na(meta_full$response)] <- "NA"
dset <- dset[, meta_full$id]
## also DEG call
degs <- read_tsv("results/sleuth.results.txt")
degs_b_mat <- degs %>%
select(target_id, b) %>%
column_to_rownames("target_id")
#~~~~~~~~~~~~~
#DecoupleR TFs
##############
net_tfs <- get_collectri(organism='human', split_complexes=FALSE)
3+#
3+3
library(Seurat)
plot(1:2)
library(tidyverse)
library(ggplot2)
library(GenomicFeatures)
library(tidyverse)
library(Seurat)
library(GenomicFeatures)
library(GenomicAlignments
)
library(DESeq2)
library(apeglm)
library(cowplot)
library(msigdbr)
library(org.mm.eg.db)
library(org.Mm.eg.db)
library(EnhancedVolcano)
library(ComplexHeatmap)
library(circlize)
library(clusterprofiler)
library(clusterProfiler)
library(Seurat)
library(scCustomize)
library(tidyverse)
d <- tibble(seq = c(1,2), pval = c(0.1, 0.01), sample = c("r1", "r2"))
d
d <- tibble(seq = c(1,2), pval = c(0.1, 0.01), sample = c("r1", "r2"))
d %>% pivot_wider(names_from = sample, values_from = se)
d %>% pivot_wider(names_from = sample, values_from = seq)
d %>% pivot_wider(names_from = sample, values_from = seq)
d <- tibble(seq = c(1,2), pval = c(0.1, 0.01), coverage = c(10,20), sample = c("r1", "r2"))
d
d %>% pivot_wider(names_from = sample, values_from = seq)
d %>% pivot_wider(cols = -c(pval), names_from = sample, values_from = coverage)
d %>% pivot_wider(cols = -c(pval), names_from = sample, values_from = coverage)
d %>% pivot_wider(cols = -pval, names_from = sample, values_from = coverage)
d
d %>% pivot_wider(cols = -pval, names_from = sample, values_from = coverage)
d %>% select(-pval) %>% pivot_wider(names_from = sample, values_from = coverage)
d %>% select(-pval) %>% pivot_wider(names_from = sample, values_from = pval)
d %>% select(-coverage) %>% pivot_wider(names_from = sample, values_from = pval)
d %>% select(-coverage) %>% mutate(pval = pval <= 0.05) %>% pivot_wider(names_from = sample, values_from = pval)
setwd("/Users/irosbarozzi/Documents/MUW/datasets/prostate_geps/sowalsky_et_al_2018")
library("tidyverse")
library("GEOquery")
library("lumi")
library("limma")
gset <- getGEO("GSE102124", GSEMatrix = TRUE, getGPL = TRUE)
library("tidyverse")
library("GEOquery")
library("lumi")
library("limma")
gset <- getGEO("GSE102124", GSEMatrix = TRUE, getGPL = TRUE)
gset
expr <- exprs(gset$GSE102124_series_matrix.txt.gz)
meta_genes <- fData(gset$GSE102124_series_matrix.txt.gz)
meta_genes_tib <- meta_genes %>% as_tibble()
#subset on genes
w <- ! is.na(meta_genes_tib$ID)
meta_genes_tib <- meta_genes_tib[w,]
expr <- expr[w,]
meta_genes_tib <- meta_genes_tib %>%
rowwise() %>%
mutate(gene_symbol = strsplit(gene_assignment, "//")[[1]][2]) %>%
ungroup()
meta_genes_tib
meta_genes_tib %>% dplyr::filter(grepl("^---|^OTT|^LOC", gene_symbol))
meta_genes_tib %>% dplyr::filter(grepl("^OTT|^LOC", gene_symbol))
meta_genes_tib %>% dplyr::filter(grepl("^LOC", gene_symbol))
meta_genes_tib %>% dplyr::filter(grepl("LOC", gene_symbol))
meta_genes_tib %>% dplyr::filter(grepl("LOC", gene_symbol)) %>%View
meta_genes_tib %>% dplyr::filter(grepl("^LOC", gene_symbol))
?grep
meta_genes_tib %>% dplyr::filter(grepl("LOC", gene_symbol))
meta_genes_tib %>% dplyr::filter(grepl("LOC", gene_symbol)) %>% View
grep("LOC", meta_genes_tib$gene_symbol)
grep("^LOC", meta_genes_tib$gene_symbol)
grepl("^LOC", meta_genes_tib$gene_symbol)
grepl("^LOC", meta_genes_tib$gene_symbol)
grepl("^ LOC", meta_genes_tib$gene_symbol)
meta_genes_tib <- meta_genes %>% as_tibble()
#subset on genes
w <- ! is.na(meta_genes_tib$ID)
expr <- exprs(gset$GSE102124_series_matrix.txt.gz)
meta_genes <- fData(gset$GSE102124_series_matrix.txt.gz)
meta_genes_tib <- meta_genes %>% as_tibble()
#subset on genes
w <- ! is.na(meta_genes_tib$ID)
meta_genes_tib <- meta_genes_tib[w,]
expr <- expr[w,]
#extract gene symbols
meta_genes_tib <- meta_genes_tib %>%
rowwise() %>%
mutate(gene_symbol = strsplit(gene_assignment, "//")[[1]][2]) %>%
ungroup() %>%
mutate(gene_symbol = gsub(" ", "", gene_symbol))
meta_genes_tib
meta_genes_tib %>% dplyr::filter(grepl("^LOC", gene_symbol))
meta_genes_tib %>% dplyr::filter(grepl("^LOC", gene_symbol)) %>% View
meta_genes_tib %>% dplyr::filter(grepl("^LOC|^OTT|^---", gene_symbol))
meta_genes_tib %>% dplyr::filter(grepl("^LOC|^OTT|^---", gene_symbol)) %>% View
meta_genes_tib
meta_genes_tib %>% dplyr::filter(! grepl("^LOC|^OTT|^---", gene_symbol))
meta_genes_tib %>% dplyr::filter(! grepl("^LOC|^OTT|^---", gene_symbol)) %>% View
meta_genes_tib
meta_genes_tib %>% View
meta_genes_tib %>% dplyr::filter(grepl("^LOC|^OTT|^---", gene_symbol))
meta_genes_tib %>% dplyr::filter(!grepl("^LOC|^OTT|^---", gene_symbol))
meta_genes_tib %>% dplyr::filter(!grepl("^LOC|^OTT|^---", gene_symbol)) %>% pull(`locus type`)
meta_genes_tib %>% dplyr::filter(!grepl("^LOC|^OTT|^---", gene_symbol)) %>% pull(`locus type`) %>% table
meta_genes_tib %>% dplyr::filter(!grepl("^LOC|^OTT|^---", gene_symbol)) %>% pull(gene_symbol)
meta_genes_tib %>% dplyr::filter(!grepl("^LOC|^OTT|^---", gene_symbol)) %>% pull(gene_symbol) %>% sort
meta_genes_tib %>% dplyr::filter(!grepl("^LOC|^OTT|^---", gene_symbol)) %>% pull(gene_symbol) %>% sort()
w <- ! grepl("^LOC|^OTT|^---", gene_symbol)
meta_genes_tib <- meta_genes_tib[w,]
expr <- expr[w,]
expr <- exprs(gset$GSE102124_series_matrix.txt.gz)
meta_genes <- fData(gset$GSE102124_series_matrix.txt.gz)
meta_genes_tib <- meta_genes %>% as_tibble()
#subset on genes
w <- ! is.na(meta_genes_tib$ID)
meta_genes_tib <- meta_genes_tib[w,]
expr <- expr[w,]
#extract gene symbols
meta_genes_tib <- meta_genes_tib %>%
rowwise() %>%
mutate(gene_symbol = strsplit(gene_assignment, "//")[[1]][2]) %>%
ungroup() %>%
mutate(gene_symbol = gsub(" ", "", gene_symbol))
#exclude --- and OTT/LOC/
w <- ! grepl("^LOC|^OTT|^---", meta_genes_tib$gene_symbol)
meta_genes_tib <- meta_genes_tib[w,]
expr <- expr[w,]
dim(meta_genes_tib)
dim(exprs)
dim(expr)
meta_samples <- pData(gset$GSE102124_series_matrix.txt.gz)
expr
expr[,1]
expr[,1] %>% hist
boxplot(expr)
expr
expr[1,]
#exclude sd = 0
sd_gene <- apply(expr, 1, sd)
sd_gene
sum(sd_gene == 0)
#exclude sd = 0
sd_gene <- apply(expr, 1, sd)
expr <- expr[sd_gene > 0,]
expr
dim(expr)
expr <- exprs(gset$GSE102124_series_matrix.txt.gz)
meta_genes <- fData(gset$GSE102124_series_matrix.txt.gz)
meta_genes_tib <- meta_genes %>% as_tibble()
#subset on genes
w <- ! is.na(meta_genes_tib$ID)
meta_genes_tib <- meta_genes_tib[w,]
expr <- expr[w,]
#extract gene symbols
meta_genes_tib <- meta_genes_tib %>%
rowwise() %>%
mutate(gene_symbol = strsplit(gene_assignment, "//")[[1]][2]) %>%
ungroup() %>%
mutate(gene_symbol = gsub(" ", "", gene_symbol))
#exclude --- and OTT/LOC/
w <- ! grepl("^LOC|^OTT|^---", meta_genes_tib$gene_symbol)
meta_genes_tib <- meta_genes_tib[w,]
expr <- expr[w,]
meta_samples <- pData(gset$GSE102124_series_matrix.txt.gz)
#normalize with lumi [not needed, see below]
#expr_norm <- smoothQuantileNormalization(expr, ref = expr[,"GSM2724470"], logMode=FALSE)
#expr already log2
#boxplot(expr)
#it looks like they already are normalized
#exclude sd = 0
sd_gene <- apply(expr, 1, sd)
expr <- expr[sd_gene > 0,]
meta_genes_tib <- meta_genes_tib[sd_gene > 0,]
design
meta_samples
meta_samples[1,]
meta_samples[,"treatment group:ch1"]
treat <- meta_samples[,"treatment group:ch1"]
design <- model.matrix(~0+treat)
fit <- lmFit(exp, design)
fit <- lmFit(expr, design)
fit
contrasts <- makeContrasts(treat_treated-treat_untreated, levels=design)
fit
contrasts <- makeContrasts(treattreated-treatuntreated, levels=design)
fit2 <- contrasts.fit(fit, contrasts)
fit2 <- eBayes(fit2, trend=TRUE)
topTable(fit2, coef=1, p.value=0.05, number=20000)
topTable(fit2, coef=1, p.value=0.05, number=20000) %>% View
meta_genes_tib
#2w
d <- topTable(fit2, coef=1, p.value=0.05, number=20000) %>% as_tibble(rownames="ID")
d
meta_genes_tib
meta_genes_tib %>% select(ID, gene_symbol)
#
res <- topTable(fit2, coef=1, p.value=0.05, number=20000) %>% as_tibble(rownames="ID")
res <- res %>%
left_join(meta_genes_tib %>% select(ID, gene_symbol), by = "ID") %>%
select(ID, gene_symbol, logFC, AveExpr, P.Value, adj.P.Val)
res
res %>% View
write_tsv(res, file = "limma_results.txt")
expr <- exprs(gset$GSE102124_series_matrix.txt.gz)
meta_genes <- fData(gset$GSE102124_series_matrix.txt.gz)
meta_genes_tib <- meta_genes %>% as_tibble()
#subset on genes
w <- ! is.na(meta_genes_tib$ID)
meta_genes_tib <- meta_genes_tib[w,]
expr <- expr[w,]
#extract gene symbols
meta_genes_tib <- meta_genes_tib %>%
rowwise() %>%
mutate(gene_symbol = strsplit(gene_assignment, "//")[[1]][2]) %>%
ungroup() %>%
mutate(gene_symbol = gsub(" ", "", gene_symbol))
#exclude --- and OTT/LOC/
w <- ! grepl("^LOC|^OTT|^---", meta_genes_tib$gene_symbol)
meta_genes_tib <- meta_genes_tib[w,]
expr <- expr[w,]
meta_samples <- pData(gset$GSE102124_series_matrix.txt.gz)
#normalize with lumi [not needed, see below]
#expr_norm <- smoothQuantileNormalization(expr, ref = expr[,"GSM2724470"], logMode=FALSE)
#expr already log2
#boxplot(expr)
#it looks like they already are normalized
#exclude sd = 0
sd_gene <- apply(expr, 1, sd)
expr <- expr[sd_gene > 0,]
meta_genes_tib <- meta_genes_tib[sd_gene > 0,]
#DEGs using limma
treat <- meta_samples[,"treatment group:ch1"]
design <- model.matrix(~0+treat)
fit <- lmFit(expr, design)
contrasts <- makeContrasts(treattreated-treatuntreated, levels=design)
fit2 <- contrasts.fit(fit, contrasts)
fit2 <- eBayes(fit2, trend=TRUE)
#
res <- topTable(fit2, coef=1, p.value=0.05, number=20000) %>% as_tibble(rownames="ID")
res <- res %>%
left_join(meta_genes_tib %>% select(ID, gene_symbol), by = "ID") %>%
select(ID, gene_symbol, logFC, AveExpr, P.Value, adj.P.Val)
write_tsv(res, file = "limma_results.txt")
